using System;

class PrinterStatusChecker
{
    static void Main()
    {
        try
        {
            while (true)
            {
                if (TryGetValidPaperQuantity(out int paperQuantity))
                {
                    DisplayPrinterStatus(paperQuantity);
                    break;
                }
                else
                {
                    Console.WriteLine("Error: Please enter a valid non-negative numeric value.");
                }
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine($"An unexpected error occurred: {ex.Message}");
        }
    }

    #region User Input

    static bool TryGetValidPaperQuantity(out int paperQuantity)
    {
        try
        {
            Console.Write("Enter the paper quantity: ");
            string input = Console.ReadLine();
            return IsValidInput(input, out paperQuantity);
        }
        catch (Exception ex)
        {
            Console.WriteLine($"An error occurred while getting user input: {ex.Message}");
            paperQuantity = 0;
            return false;
        }
    }

    static bool IsValidInput(string input, out int paperQuantity)
    {
        try
        {
            if (int.TryParse(input, out paperQuantity))
            {
                return paperQuantity >= 0;
            }
            return false;
        }
        catch (Exception ex)
        {
            Console.WriteLine($"An error occurred while validating input: {ex.Message}");
            paperQuantity = 0;
            return false;
        }
    }

    #endregion

    #region Printer Status

    static void DisplayPrinterStatus(int paperQuantity)
    {
        try
        {
            string status = CheckPrinterStatus(paperQuantity);
            Console.WriteLine($"Printer Status: {status}");
        }
        catch (Exception ex)
        {
            Console.WriteLine($"An error occurred while displaying printer status: {ex.Message}");
        }
    }

    static string CheckPrinterStatus(int paperQuantity)
    {
        try
        {
            if (paperQuantity == 0)
            {
                return "No paper";
            }
            else if (paperQuantity > 0 && paperQuantity <= 10)
            {
                return "Low paper";
            }
            else
            {
                return "Ready to print";
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine($"An error occurred while checking printer status: {ex.Message}");
            return "Unknown";
        }
    }

    #endregion
}
