using System;

class PrintHandler
{
    private const char HorizontalLine = '-';
    private const char VerticalLine = '|';
    private const char Space = ' ';

    public static void PrintArray(string arrayName, int[,] array)
    {
        Console.WriteLine($"{arrayName}:");
        int rows = array.GetLength(0);

        for (int i = 0; i < rows; i++)
        {
            Console.WriteLine($"[{array[i, 0]}, {array[i, 1]}]");
        }
    }

    public static void DisplaySortedArray(int[,] array)
    {
        Console.WriteLine($"\nSorted Array:");

        // Display the dynamic result box
        DisplayDynamicBox(array);

        int rows = array.GetLength(0);

        for (int i = 0; i < rows; i++)
        {
            Console.WriteLine($"| {array[i, 0],-3} | {array[i, 1],-3} |");
        }

        Console.WriteLine($"{VerticalLine}{new string(HorizontalLine, 5)}{VerticalLine}{new string(HorizontalLine, 5)}{VerticalLine}");
    }

    private static void DisplayDynamicBox(int[,] array)
    {
        int columnWidthX = GetMaxColumnWidth(array, 0);
        int columnWidthY = GetMaxColumnWidth(array, 1);

        Console.WriteLine($"{VerticalLine}{new string(HorizontalLine, columnWidthX + 2)}{VerticalLine}{new string(HorizontalLine, columnWidthY + 2)}{VerticalLine}");
        Console.WriteLine($"{VerticalLine} X{new string(Space, columnWidthX - 1)} {VerticalLine} Y{new string(Space, columnWidthY - 1)} {VerticalLine}");
        Console.WriteLine($"{VerticalLine}{new string(HorizontalLine, columnWidthX + 2)}{VerticalLine}{new string(HorizontalLine, columnWidthY + 2)}{VerticalLine}");
    }

    private static int GetMaxColumnWidth(int[,] array, int columnIndex)
    {
        int rows = array.GetLength(0);
        int maxLength = 0;

        for (int i = 0; i < rows; i++)
        {
            int length = array[i, columnIndex].ToString().Length;

            if (length > maxLength)
            {
                maxLength = length;
            }
        }

        return maxLength;
    }
}
